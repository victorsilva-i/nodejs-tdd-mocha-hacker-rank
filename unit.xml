<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="10.1490" tests="12" failures="8">
  <testsuite name="Root Suite" timestamp="2021-05-15T01:40:45" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="reminders_api" timestamp="2021-05-15T01:40:45" tests="12" file="/projects/challenge/test/index.spec.js" time="10.1490" failures="8">
    <testcase name="reminders_api should create a new reminder" time="0.0350" classname="should create a new reminder">
    </testcase>
    <testcase name="reminders_api should fetch all the reminders" time="0.0280" classname="should fetch all the reminders">
    </testcase>
    <testcase name="reminders_api should fetch no reminders if no matching results are present for user" time="0.0210" classname="should fetch no reminders if no matching results are present for user">
    </testcase>
    <testcase name="reminders_api should fetch no reminders if no matching results are present after the date" time="2.0020" classname="should fetch no reminders if no matching results are present after the date">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
    <testcase name="reminders_api should fetch all the reminders for a user" time="0.0200" classname="should fetch all the reminders for a user">
      <failure message="expected [] to deeply equal [ Array(2) ]" type="AssertionError"><![CDATA[AssertionError: expected [] to deeply equal [ Array(2) ]
    at Context.<anonymous> (test/index.spec.js:87:30)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)]]></failure>
    </testcase>
    <testcase name="reminders_api should fetch all the reminders after the date" time="2.0020" classname="should fetch all the reminders after the date">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
    <testcase name="reminders_api should fetch all the reminders for a user after the date" time="0.0200" classname="should fetch all the reminders for a user after the date">
      <failure message="expected [] to deeply equal [ Array(1) ]" type="AssertionError"><![CDATA[AssertionError: expected [] to deeply equal [ Array(1) ]
    at Context.<anonymous> (test/index.spec.js:101:30)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)]]></failure>
    </testcase>
    <testcase name="reminders_api should fetch a single reminder" time="0.0080" classname="should fetch a single reminder">
    </testcase>
    <testcase name="reminders_api should get 404 if the reminder ID does not exist" time="0.0090" classname="should get 404 if the reminder ID does not exist">
      <failure message="expected { Object (_events, _eventsCount, ...) } to have status code 404 but got 200" type="AssertionError"><![CDATA[AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 404 but got 200
    at Context.<anonymous> (test/index.spec.js:114:30)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)]]></failure>
    </testcase>
    <testcase name="reminders_api should get 405 for a put request to /reminders/:id" time="2.0010" classname="should get 405 for a put request to /reminders/:id">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
    <testcase name="reminders_api should get 405 for a patch request to /reminders/:id" time="2.0010" classname="should get 405 for a patch request to /reminders/:id">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
    <testcase name="reminders_api should get 405 for a delete request to /reminders/:id" time="2.0020" classname="should get 405 for a delete request to /reminders/:id">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/projects/challenge/test/index.spec.js)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)]]></failure>
    </testcase>
  </testsuite>
</testsuites>